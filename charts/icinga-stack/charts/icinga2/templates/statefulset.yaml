apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "icinga2.fullname" . }}
  labels:
    {{- include "icinga2.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "icinga2.fullname" . }}
  replicas: 1
  selector:
    matchLabels:
      {{- include "icinga2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "icinga2.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "icinga2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: api
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          command:
            - icinga2
            - daemon
          volumeMounts:
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            - name: {{ include "icinga2.fullname" . }}-features
              mountPath: /etc/icinga2/features-enabled
            - name: {{ include "icinga2.fullname" . }}-config
              mountPath: /etc/icinga2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          livenessProbe:
            failureThreshold: 5
            httpGet:
              scheme: HTTPS
              path: /v1
              port: {{ .Values.service.port }}
              httpHeaders:
                - name: Authorization
                  value: Basic {{ printf "%s:%s" "icingaweb" .Values.global.api.users.icingaweb.password | b64enc }}
          readinessProbe:
            failureThreshold: 3
            httpGet:
              scheme: HTTPS
              path: /v1
              port: {{ .Values.service.port }}
              httpHeaders:
                - name: Authorization
                  value: Basic {{ printf "%s:%s" "icingaweb" .Values.global.api.users.icingaweb.password | b64enc }}
      initContainers:
        - name: {{ .Chart.Name }}-bootstrapper
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - icinga2
            - daemon
            - -C
          env:
            - name: ICINGA_CN
              value: {{ .Values.config.node_name | quote }}
            - name: ICINGA_MASTER
              value: "1"
          volumeMounts:
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ include "icinga2.fullname" . }}-features
          configMap:
            name: {{ include "icinga2.fullname" . }}-features
        - name: {{ include "icinga2.fullname" . }}-config
          configMap:
            name: {{ include "icinga2.fullname" . }}-config
        {{- if ne .Values.persistence.enabled true }}
        - name: data
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.volumeName }}
        volumeName: {{ .Values.persistence.volumeName }}
        {{- end }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        {{- end }}
        selector:
        {{- if .Values.persistence.matchLabels }}
          matchLabels:
            {{- toYaml .Values.persistence.matchLabels | nindent 12 }}
        {{- end }}
        {{- if .Values.persistence.matchExpressions }}
          matchExpressions:
            {{- toYaml .Values.persistence.matchExpressions | nindent 12 }}
        {{- end }}
  {{- end }}
