apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "icinga2.fullname" . }}
  labels:
    {{- include "icinga2.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "icinga2.fullname" . }}
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "icinga2.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "icinga2.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "icinga2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: ICINGA_CN
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
            - name: POD_INDEX
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
            - name: ICINGA_ZONE
              value: {{ .Values.config.zone_name }}
            # {{- if and (hasKey .Values.config "node_setup") .Values.config.node_setup.endpoint }}
            # - name: ICINGA_ENDPOINT
            #   value: {{ .Values.config.node_setup.endpoint }}
            #   {{- if .Values.config.node_setup.host -}}
            #     ,{{ .Values.config.node_setup.host }}
            #   {{- end }}
            #   {{- if .Values.config.node_setup.port -}}
            #     ,{{ .Values.config.node_setup.port }}
            #   {{- end }}
            # {{- end }}
            - name: ICINGA_DISABLE_CONFD
              value: {{ .Values.config.disable_confd | int | quote }}
            {{- include "icinga2.envSecrets" . | nindent 12 }}
            {{- if .Values.extraEnvVars }}
            {{- toYaml .Values.extraEnvVars | nindent 12 }}
            {{- end }}
          ports:
            - name: api
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          command:
            - icinga2
            - daemon
          volumeMounts:
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            - name: {{ include "icinga2.fullname" . }}-features
              mountPath: /etc/icinga2/features-enabled
            - name: {{ include "icinga2.fullname" . }}-config
              mountPath: /etc/icinga2
            {{- include "icinga2.secretMounts" . | indent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      initContainers:
        - name: {{ .Chart.Name }}-bootstrapper
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if and (hasKey .Values.config "node_setup") (not .Values.config.is_master) }}
          command:
            - bash
            - -c
          args:
            - |
              set -eu
              mkdir -p /data/var/lib/icinga2/certs /data/var/cache/icinga2
              CA_PATH="/var/lib/icinga2/certs/ca.crt"
              CRT_PATH="/var/lib/icinga2/certs/${ICINGA_CN}.crt"
              KEY_PATH="/var/lib/icinga2/certs/${ICINGA_CN}.key"
              CSR_PATH="/var/lib/icinga2/certs/${ICINGA_CN}.key"
              icinga2 pki save-cert --host o-mgmt-master-0 --trustedcert /tmp/trusted.crt
              if ! [ -r /var/lib/icinga2/certs/ca.crt ] || ! icinga2 pki verify --cert /tmp/trusted.crt --ca "${CA_PATH}"; then
                  openssl s_client -connect "o-mgmt-master-0:5665" -showcerts </dev/null 2>/dev/null | awk '
                      /-----BEGIN CERTIFICATE-----/ {in_cert=1; cert=""}
                      in_cert {cert = cert $0 "\n"}
                      /-----END CERTIFICATE-----/ {in_cert=0; certs[++i]=cert}
                      END {print certs[i] > "/var/lib/icinga2/certs/ca.crt"}'
              fi
              if ! [ -r "${CRT_PATH}" ] \
                  || ! icinga2 pki verify --cert "${CRT_PATH}" --ca "${CA_PATH}" \
                  || ! icinga2 pki verify --cert "${CRT_PATH}" --cn "${ICINGA_CN}"; then
                  TICKET="$(icinga2 pki ticket --cn ${ICINGA_CN} --salt "${ICINGA_TICKET_SALT}")"
                  icinga2 pki new-cert --cn "${ICINGA_CN}" --key "${KEY_PATH}" --cert "${CRT_PATH}"
                  icinga2 pki request --key "${KEY_PATH}" --cert "${CRT_PATH}" --ca "${CA_PATH}" --trustedcert /tmp/trusted.crt --host "${ICINGA_PARENT_HOST}" --ticket "${TICKET}"
              fi
              export ICINGA_TRUSTEDCERT="$(cat /tmp/trusted.crt)"
              export ICINGA_CACERT="$(cat "${CA_PATH}")"
              exec /entrypoint icinga2 daemon -C
          {{- end }}
          env:
            - name: ICINGA_CN
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['statefulset.kubernetes.io/pod-name']
            - name: POD_INDEX
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['apps.kubernetes.io/pod-index']
            {{- if .Values.config.is_master }}
            - name: ICINGA_MASTER
              value: "1"
            {{- end }}
            - name: ICINGA_ZONE
              value: {{ .Values.config.zone_name }}
            {{- if hasKey .Values.config "node_setup" }}
            {{- if .Values.config.node_setup.endpoint }}
            - name: ICINGA_ENDPOINT
              {{- if typeIs "string" .Values.config.node_setup.endpoint -}}
              value: {{ .Values.config.node_setup.endpoint }}
              {{- else }}
              value: {{ .Values.config.node_setup.endpoint.name }}
              {{- if .Values.config.node_setup.endpoint.host -}}
                ,{{ .Values.config.node_setup.endpoint.host }}
              {{- end }}
              {{- if .Values.config.node_setup.endpoint.port -}}
                ,{{ .Values.config.node_setup.endpoint.port }}
              {{- end }}
              {{- end }}
            {{- end }}
            {{- if .Values.config.node_setup.parent_host }}
            - name: ICINGA_PARENT_HOST
              value: {{ .Values.config.node_setup.parent_host }}
            {{- end }}
            {{- if .Values.config.node_setup.parent_host }}
            - name: ICINGA_PARENT_ZONE
              value: {{ .Values.config.node_setup.parent_zone }}
            {{- end }}
            {{- end }}
            - name: ICINGA_DISABLE_CONFD
              value: {{ .Values.config.disable_confd | int | quote }}
            {{- include "icinga2.envSecrets" . | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- include "icinga2.secretMounts" . | indent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: {{ include "icinga2.fullname" . }}-features
          configMap:
            name: {{ include "icinga2.fullname" . }}-features
        - name: {{ include "icinga2.fullname" . }}-config
          configMap:
            name: {{ include "icinga2.fullname" . }}-config
        {{- if ne .Values.persistence.enabled true }}
        - name: data
          emptyDir: {}
        {{- end }}
        {{- include "icinga2.secretVolumes" . | indent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ .Values.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ .Values.persistence.size }}
        {{- if .Values.persistence.volumeName }}
        volumeName: {{ .Values.persistence.volumeName }}
        {{- end }}
        {{- if .Values.persistence.storageClass }}
        {{- if (eq "-" .Values.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ .Values.persistence.storageClass }}
        {{- end }}
        {{- end }}
        selector:
        {{- if .Values.persistence.matchLabels }}
          matchLabels:
            {{- toYaml .Values.persistence.matchLabels | nindent 12 }}
        {{- end }}
        {{- if .Values.persistence.matchExpressions }}
          matchExpressions:
            {{- toYaml .Values.persistence.matchExpressions | nindent 12 }}
        {{- end }}
  {{- end }}