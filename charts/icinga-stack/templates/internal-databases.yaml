{{- range $resource, $settings := .Values.global.databases -}}
{{- if $settings.enabled }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "icinga-helm.fullname" $ }}-{{ $resource }}-database
  labels:
    {{- include "icinga-helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ include "icinga-helm.fullname" $ }}-{{ $resource }}-database
spec:
  serviceName: {{ include "icinga-helm.fullname" $ }}-{{ $resource }}-database
  selector:
    matchLabels:
      {{- include "icinga-helm.selectorLabels" $ | nindent 6 }}
      app.kubernetes.io/component: {{ include "icinga-helm.fullname" $ }}-{{ $resource }}-database
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "icinga-helm.selectorLabels" $ | nindent 8 }}
        app.kubernetes.io/component: {{ include "icinga-helm.fullname" $ }}-{{ $resource }}-database
    spec:
      containers:
        - name: mariadb
          image: mariadb:latest
          ports:
            - containerPort: 3306
              name: mariadb
          env:
            - name: MARIADB_RANDOM_ROOT_PASSWORD
              value: "1"
            - name: MARIADB_DATABASE
              value: {{ $settings.database | default "mysql" | quote}}
            - name: MARIADB_USER
              {{- if and $settings.username $settings.username.value }}
              value: {{ $settings.username.value | quote }}
              {{- else if and $settings.username $settings.credSecret $settings.username.secretKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ $settings.credSecret | quote }}
                  key: {{ $settings.username.secretKey | quote }}
              {{- else }}
              {{ fail (print $resource " username not set. Set either .Values.global.databases." $resource ".username.value or .Values.global.databases." $resource ".credSecret and .Values.global.databases." $resource ".username.secretKey") }}
              {{- end }}
            - name: MARIADB_PASSWORD
              {{- if and $settings.password $settings.password.value }}
              value: {{ $settings.password.value | quote }}
              {{- else if and $settings.password $settings.credSecret $settings.password.secretKey }}
              valueFrom:
                secretKeyRef:
                  name: {{ $settings.credSecret | quote }}
                  key: {{ $settings.password.secretKey | quote }}
              {{- else }}
              {{ fail (print $resource " password not set. Set either .Values.global.databases." $resource ".password.value or .Values.global.databases." $resource ".credSecret and .Values.global.databases." $resource ".password.secretKey") }}
              {{- end }}
          volumeMounts:
            {{- if $settings.persistence.enabled }}
            - name: data
              mountPath: /var/lib/mysql
              {{- if $settings.persistence.subPath }}
              subPath: {{ $settings.persistence.subPath }}
              {{- end }}
            {{- end }}
  {{- if $settings.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - {{ $settings.persistence.accessMode | quote }}
        resources:
          requests:
            storage: {{ $settings.persistence.size }}
        {{- if $settings.persistence.volumeName }}
        volumeName: {{ $settings.persistence.volumeName }}
        {{- end }}
        {{- if $settings.persistence.storageClass }}
        {{- if (eq "-" $settings.persistence.storageClass) }}
        storageClassName: ""
        {{- else }}
        storageClassName: {{ $settings.persistence.storageClass }}
        {{- end }}
        {{- end }}
        selector:
        {{- if $settings.persistence.matchLabels }}
          matchLabels:
            {{- toYaml $settings.persistence.matchLabels | nindent 12 }}
        {{- end }}
        {{- if $settings.persistence.matchExpressions }}
          matchExpressions:
            {{- toYaml $settings.persistence.matchExpressions | nindent 12 }}
        {{- end }}
  {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $.Release.Name }}-{{ $resource }}-database  # hardcoded so that dependant services can find it
  labels:
    {{- include "icinga-helm.labels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ include "icinga-helm.fullname" $ }}-{{ $resource }}-database
spec:
  ports:
    - port: 3306
      name: mariadb
  selector:
    {{- include "icinga-helm.selectorLabels" $ | nindent 4 }}
    app.kubernetes.io/component: {{ include "icinga-helm.fullname" $ }}-{{ $resource }}-database
{{- end }}
{{- end -}}
